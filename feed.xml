<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Felix Felicis</title>
    <link href="http://lab.lepture.com/liquidluck/feed.xml" rel="self" />
    <link href="http://lab.lepture.com/liquidluck/" />
    <updated>2015-05-03T21:08:43+08:00</updated>
    <id>http://lab.lepture.com/liquidluck/</id>
    <entry>
        <title type="html"><![CDATA[Everyone&#39;s Job Is Your Responsibility]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2014/everyones-job-is-your-responsibility.html"/>
        <published>2014-08-15T08:23:43+08:00</published>
        <updated>2015-04-11T14:20:59+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2014/everyones-job-is-your-responsibility.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>I am a software developer. I have always worked for small to medium sized companies, between roughly 10 and 100 people. When I first started my professional career, I had been trained to write good software. I learned about software development processes, programming languages, databases, testing, algorithms, requirements, and all sorts of things that make me better at writing software. I was hired as a software developer and was assigned software to write, so I wrote it to the best of my ability. </p>
<p>But that’s all I did, I wrote good software. And by itself, that’s worthless.  </p>
<p>I write software to get paid, and that money comes from customers paying for products or services. When I write software, I do it as a part of a larger human system that takes customer problems, builds solutions for them, and sells the solutions so we can all keep getting paychecks. If any part of the human system stops working, the paychecks stop coming. </p>
<p>The first time I was confronted with this reality I was working on a team with one other developer and a project manager. In every status meeting we reported that we were on track to deliver the product on time, but when that time came we discovered that the other developer had a different definition of “done” than the rest of us. The product was late and we lost some future business from that customer. The blame for that failure was mostly laid on the other developer, but a little of the blame went to everyone. We should have been integrating our code the whole time. We should have demoed it to each other, or reviewed each other’s code. Doing those things would have exposed the problem much earlier. Beyond our assigned jobs, we all had the responsibility to ensure that everyone else was doing their job so the human system would be working properly for the client. </p>
<p>When you begin to consider the whole company as a human system, you can break it down into components and measure it like an engineering problem. (It will be an oversimplification, but it will do for our purposes.) </p>

<ul>
<li>Marketing’s job is to find random people most likely to buy your product and make sure they know about it and where to find it.</li>
<li>Sales often has two functions, taking random people and converting them to contacts, and later, showing those contacts how your product can improve their lives so they buy it.</li>
<li>Product Management takes data about customer problems, desires, and psychology, and creates a set of product requirements that meet customer needs, while still respecting business realities.</li>
<li>Technology turns product requirements into a working software product, and keeps it working when customers start using it.</li>
<li>Customer Service receives customer problems and complaints, keeps them working when the technology fails, and feeds info to product management when the product doesn’t meet their needs.</li>
<li>Finance tracks the money coming in, and makes sure it exceeds the money going out.</li>
<li>Management motivates employees to do their job, makes sure they have what they need, and keeps roadblocks and distractions out of their way.</li>
</ul>
<p>All of these functions are required to keep customers happy. They aren’t always manifested in separate groups of people, but the tasks exist at every product company. If your company is lacking any one of them then you’re running on borrowed time. It’s essential to restore that function before the paychecks stop. That’s explicitly management’s job, but if you see the problem and don’t bring it to management for a solution you may be looking at the seeds of your own unemployment.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Save This For Me]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2014/save-this-for-me.html"/>
        <published>2014-02-10T00:48:27+08:00</published>
        <updated>2015-04-10T21:01:59+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2014/save-this-for-me.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>A while back I saw <a href="http://vimeo.com/48437619">Emerson Spartz speak at Technori Pitch</a>, and one minor thing he said (about 7:30 in) stuck in my head. He reads a ton, and when he finds something he wants to remember he reads it again the next week, the next month, and every six months after that. It sounded like a good idea. I wanted a tool to help me do that, so I made one. </p>
<p><a href="http://www.savethisfor.me">Save This For Me</a> saves whatever you give it and emails it to you on a decaying schedule: two days, one week, 30 days, and every 180 days after you save it. The content is written in markdown, so you have flexibility to add rich content while being fairly friendly to articles pasted from the web. </p>
<p>I mostly wrote this because I want to use it, but I hope other people want to use it too.  I have ideas for improving it too, but there&#39;s not much use in improving it too much if nobody else finds it useful, so I&#39;m releasing it now as a minimum viable product.  Please give it a try and send me feedback by email or twitter, or as a comment on this post.</p>

<h2 id="toc_0">Comments</h2>
<p><strong><a href="#46" title="2014-03-13 14:11:25">Cezar</a>:</strong> Great work. You should add a Zapier integration. That would take this over the top.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[2013 In Review &amp; 2014 Goals]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2014/2013-in-review-2014-goals.html"/>
        <published>2014-02-02T02:17:58+08:00</published>
        <updated>2015-04-10T21:04:35+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2014/2013-in-review-2014-goals.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>I’ve been thinking lately about my body of work.  Everything a person does adds up to tell the story of what they care about and what they accomplished.  I’ve never really kept track of this at any more granularity than a resumé, and I think that’s a problem.  It leads to forgetting what you’ve done, and losing track of your major goals.  Memory is fallible, and with enough time I’ll forget all but the broadest strokes of what I’ve done.  A person’s expertise is based on their history of doing things and what they learned from it, and the less they remember of that history the less expertise they have.  Also, looking back at a list of accomplishments gives a new perspective on how they fit in to a person’s major goals, and that insight can inform what future actions will help reach those goals. </p>
<p>So what did I do in 2013?</p>

<ul>
<li>I let my term on PS: One’s Board of Directors expire and stepped away from daily management for a while.  I’ve always found it hard to not help run the hackerspace, but doing so was important for me in learning to let others take things over and drop them from my mental space.  It gives me more time to work on what’s important instead of what’s urgent.</li>
<li>I created PS: One’s first annual budget in April.  It was grueling and well outside my expertise but I believed it was a major step toward transparency and fiscal responsibility for the organization.</li>
<li>I improved the wood shop certification and safety standards and certified many people, making it safer for the users and the tools.</li>
<li>I developed and taught an introduction to woodworking class.  This was a big one for me because I tend to collect knowledge on things I’m interested in and not use it enough.  Teaching classes seems like a great way to put that knowledge to work and make money in the process.</li>
<li>I helped the Chicago Public Library develop a makerspace in the Harold Washington branch downtown.  There wasn’t a lot of direct work for me on this task, I was just on their board of advisors and helped them figure out what a makerspace should be.</li>
<li>I really learned how Agile works, and started with continuous deployment.  This really started when I joined Analyte Health in September 2012.  I wanted to work there because they we&#39;re the best Agile python shop I’d heard of in Chicago.  Since joining I&#39;ve had a lot of hands on experience developing using the agile method.</li>
</ul>
<p>One problem with this list is that too many things were just whatever was in front of me.  Aside from the woodworking class and the budget, I just did whatever was convenient.  I&#39;ve relied too much on opportunities presenting themselves and I haven&#39;t been making my own opportunities to build the body of work I really want. </p>
<p>To that end, my goals for 2014 are: </p>

<ul>
<li>Take more control of my career path.  I&#39;ve been a developer for about 10 years and I&#39;ve never been in a senior position.  I think this is mostly because I&#39;ve moved to better companies and been surrounded by increasingly excellent coworkers, and also into a slightly different job as a consultant, but it&#39;s time I took a serious look at what it will take to get into a more senior position.</li>
<li>Start a curated kit subscription service.  I&#39;ve already started this a little bit.  It&#39;s an idea for a business enabling parents who want their kids to learn about making things to regularly receive kits curated by me, along with support when they make the kit if they have any problems.  Almost everyone I&#39;ve talked to has been very positive on the idea, and I already have kits selected.  The next step is to simply get started and learn what the customers want.</li>
<li>Make more art.  I had a realization last year that caused me to value artistic expression considerably more.  It was further emphasized by all the amazing people at XOXO.  I have a few ideas I&#39;d like to make, and I think it&#39;s important and will be rewarding.</li>
<li>Blog more.  Part of the difference between having 10 years of experience and 1 year of experience 10 times is remembering what you did.  Writing it down in a blog helps.  Also, I have ideas or get inspiration and keep it to myself too often.  I have pages upon pages in evernote with links and images and project ideas that are doing nobody any good as long as they stay buried.</li>
<li>Most importantly, do.  Don&#39;t allow television or video games to distract me from doing things that are more worthwhile.</li>
</ul>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Seasoning Cast Iron Cookware]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2014/seasoning-cast-iron-cookware.html"/>
        <published>2014-01-13T20:05:53+08:00</published>
        <updated>2015-04-10T21:05:04+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2014/seasoning-cast-iron-cookware.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>I came across this fantastic series of posts about seasoning cast iron cookware.  Cast iron has always had some mysticism around how to clean it and how it prevents food from sticking, and these posts were a refreshing application of science to the question. </p>
<p><a href="http://sherylcanter.com/wordpress/2010/01/perfect-popovers-and-how-to-clean-reseason-cast-iron/">How to remove rust from cast iron (and some reseasoning mistakes)</a> </p>
<p><a href="http://sherylcanter.com/wordpress/2010/01/a-science-based-technique-for-seasoning-cast-iron/">How to reseason cast iron</a> </p>
<p><a href="http://sherylcanter.com/wordpress/2010/02/black-rust-and-cast-iron-seasoning/">How to create a black oxide layer for optimum reseasoning</a></p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Bike Bag]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2014/bike-bag.html"/>
        <published>2014-01-13T19:59:04+08:00</published>
        <updated>2015-05-03T21:02:52+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2014/bike-bag.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>Carrying my bike emergency stuff is a perennial pain point for me. I have to bring it with me when I lock up the bike to avoid theft, but I usually don&#39;t carry a bag I can stash it in. Inspired by some bags I saw made by <a href="//twitter.com/thenorasaurus">@thenorasaurus</a>, I made a similar one of my own. Here it is in use. </p>
<p><img src="/static/2014/LX80c.jpg" alt="Bike bag in use"/></p>
<p>The bag is an ordinary rectangular shape, but the sides aren&#39;t sewn all the way up to the zipper. There&#39;s some extra room for the zipper flaps to reach around the top tube, so it hangs by the same zipper that keeps it closed.</p>
<p><img src="/static/2014/9AtLY8o-Imgur.jpg" alt="bike bag"/></p>
<p>It&#39;s big enough to hold my lights, fix-a-flat kit, pants leg strap, and if I removed the notebooks it would fit a spare tube. Everything I need for my bike while riding around town.</p>
<p><img src="/static/2014/k5xdMUD-Imgur.jpg" alt="bike bag contents"/></p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Laser Cut Lampshade]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2013/laser-cut-lampshade.html"/>
        <published>2013-03-04T11:12:47+08:00</published>
        <updated>2015-05-03T21:08:43+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2013/laser-cut-lampshade.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p><img src="/static/2013/laser-cut-lampshade.jpg" alt="Laser Cut Lampshade"/></p>
<p>Laser cut from cardboard, then glued to paper and cut out, then hot glued into a box and fitted with an IKEA Hemma cord set.</p>

<h2 id="toc_0">Comments</h2>
<p><strong><a href="#43" title="2013-03-04 11:19:27">Dan</a>:</strong> Did you design that yourself as well? I haven&#39;t kept up with all you&#39;ve been working on lately but that might be worth trying to put on Etsy. What kind of wood is that? It looks kindof thick. Also I don&#39;t really notice burn marks.</p>
<p><strong><a href="#44" title="2013-03-04 11:40:13">tsaylor</a>:</strong> Yeah, designed myself. It&#39;s actually corrugated cardboard. I intend to use wood later but this was just a prototype. I could etsy it but it&#39;s another cheap product that requires shipping; if I&#39;m going to ship products to people they&#39;re going to be expensive.</p>
<p><strong><a href="#45" title="2013-03-04 12:01:18">Dan</a>:</strong> Cheap to produce, maybe. I bet it could sell for more than those glasses, though maybe with a very high volume.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Bikeshedding is the Mind Killer]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2013/bikeshedding-is-the-mind-killer.html"/>
        <published>2013-02-09T16:33:50+08:00</published>
        <updated>2015-04-10T21:11:10+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2013/bikeshedding-is-the-mind-killer.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>I must not bikeshed. </p>
<p>Bikeshedding is the mind-killer. </p>
<p>Bikeshedding is the little-death that brings total dysfunction. </p>
<p>I will take action. </p>
<p>I will permit it to make progress through me. </p>
<p>And when I finish my work I will turn the inner eye to see the gains I have made. Where the bikeshedding has gone there will be nothing. Only action will remain.</p>

<h2 id="toc_0">Comments</h2>
<p><strong><a href="#41" title="2013-02-10 09:10:41">Cezar</a>:</strong> The code must flow.</p>
<p><strong><a href="#42" title="2013-03-05 22:25:10">Hef</a>:</strong> I think the poem would have been a lot prettier in a shade of blue. I know this because I have seen poems before and know that one poem was better in blue.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Knife Making]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2013/knife-making.html"/>
        <published>2013-01-21T16:36:29+08:00</published>
        <updated>2015-05-03T20:53:32+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2013/knife-making.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>Now that I&#39;m no longer the president of Pumping Station: One I can legitimately shirk responsibility and do fun projects at the space. This weekend, knife making! </p>
<p><img src="/static/2013/IMG_0274.jpg" alt="diy knives"/></p>
<p>The top one was ground from a blank of O1 tool steel and heat treated. It&#39;s sitting on a blank of oak that&#39;s going to become its handle. I meant to bend it to make a spoon carving knife but I forgot to do that before heat treating, so instead of fixing this one I&#39;ll just make another and fix a few more mistakes along the way. </p>
<p>The bottom one was forged from a railroad spike, formed on a grinding wheel and finished / sharpened at the belt sander. It&#39;s not good knife metal, it&#39;s just a project to get started at blacksmithing. And it looks purdy.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Getting Data From a Bound but Unvalidated Form]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2012/getting-data-from-a-bound-but-unvalidated-form.html"/>
        <published>2012-08-01T09:52:31+08:00</published>
        <updated>2015-04-10T22:13:27+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2012/getting-data-from-a-bound-but-unvalidated-form.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>I have a form with dynamic fields, meaning the answers available for field B depend on the answer for field A.  Therefore, when the form is submitted I get the value from field B, but when it&#39;s redisplayed I have to read the value from field A and populate the choices for field B or else field B is blanked out in the browser. I looked for a convenient way to read the bound data from a specified form field and was surprised that I couldn&#39;t find one.  I could just read the POST, but this form is in a formset with a prefix, so I&#39;d have to assemble a complicated key name like &ldquo;foo_bar_form-1-fieldname&rdquo;.  The closest I saw to an interface to get the data was the _raw_value(fieldname) method which I couldn&#39;t get to work and is suboptimal since it&#39;s an internal call and could change in the future. I ended up having to go to the POST data anyway, but I saw a helper function in _raw_value(fieldname) that made it easier.  What I ended up doing was this: </p>

<pre><code>field_value = self.request.POST[form.add_prefix('fieldname')]</code></pre>
<p>add_prefix(fieldname) is a public method to take care of the prefix hassle for me, so reading the post value is doable.  The only thing to watch out for is that you have to handle potential invalid values when redisplaying a form with errors.</p>

<h2 id="toc_0">Comments</h2>
<p><strong><a href="#38" title="2012-08-16 16:57:38">Cezar</a>:</strong> Do you mean unbound data?</p>
<p><strong><a href="#39" title="2012-08-16 17:00:11">Cezar</a>:</strong> I guess my question is. How do you have bound data that&#39;s not validated? I thought is_valid() is what bound it?</p>
<p><strong><a href="#40" title="2012-08-21 12:13:01">tsaylor</a>:</strong> The data is bound when you instantiate the form with a dictionary in the first parameter. At that point the data can be found in form.data, and validating moves it to form.cleaned_data.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Vim Is Wrong]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2012/vim-is-wrong.html"/>
        <published>2012-05-27T13:32:41+08:00</published>
        <updated>2015-05-03T20:22:53+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2012/vim-is-wrong.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>I just saw this post on Stack Overflow about some <a href="http://stackoverflow.com/questions/10760326/merge-multiple-lines-in-vim/10760494#10760494">clever vim commands</a> and as a vim user  I was glad to learn some new tricks I can use.  Then I read the <a href="http://www.reddit.com/r/programming/comments/u4yzl/the_perfect_time_to_use_daft_punk_as_an_example/c4sg10d">reddit comments</a> about the story and found this (screencapped in case that link changes):</p>
<p><img src="/static/2012/Screen-Shot-2012-05-26-at-9.47.44-AM.png" alt=""/></p>
<p>When writing software the code is written once but probably read dozens of times.  Therefore, readable code is very important.  This is one of the central tenets of Python.  These commenters are debating whether readability is equally as important with Vim commands as it is in programming languages.</p>
<p>Previously I would have sided with the advocates of Vim&#39;s terse command syntax without much thought.  Short commands are easier to type and can be more effective.  However, this thread made me reconsider.  Because of Vim&#39;s terse commands, they are harder to learn and to remember.  And once a command is learned, it may be learned as a magical incantation and not a sequence of instructions, so the components won&#39;t be learned and reused for other needs.  So unless a Vim user spends a considerable amount of time learning commands, they&#39;ll be using the editor inefficiently and getting less done than they could because of Vim&#39;s terse commands and steep learning curve.  I&#39;m no longer sure that the efficiency gained by having short, easy to type commands is worth the efficiency lost by having a large set of hard to remember commands in your brain, and an equally large set that you aren&#39;t using because you don&#39;t know them.</p>
<p>Python has a relatively small syntax.  Most things are explicit so there aren&#39;t a bunch of implicit things you have to remember to know what your code is doing.  The advantage that gives a developer is that they can write code more quickly without having to look up syntax rules or function calls all the time.  Also, a new developer can come to the code and will understand the program more quickly with fewer things to learn.  As I thought about Vim&#39;s command complexity, it occurred to me that we already have a command set that&#39;s easy to write, read, and remember, and it&#39;s quick and easy to write a short script like the one in that Stack Overflow comment: Python!  Why can&#39;t Vim use Python to edit the working document?  The <a href="http://orestis.gr/blog/2008/08/10/scripting-vim-with-python/">Python scripting support</a> is a good start for complex add-ons, but why not make it even more integrated with things like :find(&#39;query&#39;) instead of /query?  I&#39;m very curious if a readily accessible, full blown python interpreter would make my vim use more effective.</p>
<p>P.S.  Emacs? </blasphemy></p>

<h2 id="toc_0">Comments</h2>
<p><strong><a href="#34" title="2012-06-06 02:35:21">Scott</a>:</strong> This sounds a lot like advocating tacking on a scripting interface to the driver controls in a car because it&#39;s hard to learn to drive without practice and justifying it by saying that the scripting interface makes driving skills more readable.</p>
<p><strong><a href="#35" title="2012-06-07 10:08:20">tsaylor</a>:</strong> The difference between driving and vim is that almost all the controls on a car are physical, so by looking you can see what&#39;s available. That&#39;s more like a GUI interface, and this sort of UX problem is why GUIs were invented. There are software car controls, and even non-obvious physical ones, but they&#39;re all less essential features. Anyone can get in a car with an automatic transmission and start driving it, but they may have to ask or look for the lights and wipers (which is a bit frustrating, but tolerable).</p>
<p><strong><a href="#36" title="2012-08-16 16:58:41">Cezar</a>:</strong> If you had such a car, and you put that scripting interface on it. That bucket of awesome would be called the Emacs.</p>
<p><strong><a href="#37" title="2013-01-09 15:38:11">Brian Madigan</a>:</strong> The good thing about vim is that MOST of what you do with it day-to-day is pure muscle memory. The bad thing about vim&hellip; there is no bad thing about vim. Generally you have to learn emacs or vim. I started with emacs, but to do basic commands required what I felt to be unnatural contortions of the hands. Vi is more ergonomic, at least for me. You don&#39;t need to know 100% of what&#39;s available in Vi, just enough to use it for your own purposes.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Get The Display Name Of A ModelChoiceField&#39;s Selected Value in Django]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2012/get-the-display-name-of-a-modelchoicefields-selected-value-in-django.html"/>
        <published>2012-05-25T17:23:38+08:00</published>
        <updated>2015-04-10T21:32:26+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2012/get-the-display-name-of-a-modelchoicefields-selected-value-in-django.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>I just had a formset where each form had a pre-loaded ModelChoiceField, and I needed to display the name of the selected choice in the template.  On a model you would just use the <a href="https://docs.djangoproject.com/en/dev/ref/models/instances/?from=olddocs#django.db.models.Model.get_FOO_display">get_FOO_display()</a> method, but a form has no such convenience.  I found a number of almost solutions on Stack Overflow, and after poring over them I concluded the best solution for my problem was to add the following method to the form: </p>

<pre><code>class QuestionLanguageForm(forms.Form):
    ''' basic QuestionLanguage form '''
    language = forms.ModelChoiceField(queryset=Language.objects.all())
    short = forms.CharField()
    place_holder = forms.CharField()
    long = forms.CharField(widget=forms.Textarea(attrs={'rows':None, 'cols':None}))

def get_language_name(self):
    ''' returns the name of the selected language '''
    try:
       return Language.objects.get(id=self.initial['language']).name
    except:
       return None</code></pre>
<p>This way I can use </p>

<pre><code>{{ form.get_language_name }}</code></pre>
<p>in my template and it prints the human readable name of the language set in my initial data.  This code is not robust; I catch all exceptions and ignore them because I&#39;m only using it in a circumstance where this code won&#39;t raise an exception (and in case it does, at least it won&#39;t fail catastrophically).  However proper error handling could be added pretty simply.  #ExerciseForTheReader P.S.  The title says &ldquo;selected&rdquo; value but I&#39;m actually using a pre-loaded value, not anything user selected.  If you need to get a user selected value you could use self.data or self.cleaned_data instead of self.initial.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Convert Django Model Instances To Dictionaries]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2012/convert-django-model-instances-to-dictionaries.html"/>
        <published>2012-05-21T20:56:47+08:00</published>
        <updated>2015-04-10T21:46:00+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2012/convert-django-model-instances-to-dictionaries.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>I just searched for a method to convert a model instance to a dictionary in Django and the top few results were a bunch of custom methods in Django Snippets and Stack Overflow.  I was about to use one of those when I clicked on one last link that showed me <a href="https://yuji.wordpress.com/2008/11/21/django-quick-note-from-irc-model-instance-to-dictionary/">a better solution</a>.  There is a method already built into Django that does exactly what I want: <a href="https://github.com/django/django/blob/master/django/forms/models.py#L95">django.forms.models.model_to_dict</a>.</p>
<p>As I pointed that out to a coworker, he showed me that that&#39;s basically the same output as <a href="https://docs.djangoproject.com/en/dev/ref/models/querysets/#values">the .values() method in the queryset api.</a>  If you don&#39;t specify a value to retrieve, it will retrieve the whole model instance as a dictionary. </p>
<p>Here&#39;s the output of these two pieces of code: </p>

<pre><code>&gt;&gt;&gt; Q.objects.filter(id=6).values()
[{'short': u'oui', 'deleted': False, 'language_id': 3L, 'long': u'oui', 'place_holder': u'oui', 'id': 6L, 'question_id': 8L}]
&gt;&gt;&gt; model_to_dict(Q.objects.filter(id=6)[0])
{'short': u'oui', 'language': 3L, 'deleted': False, 'question': 8L, 'long': u'oui', 'place_holder': u'oui'}</code></pre>
<p>There are two differences here, and one of them is pretty important.  First, .values() turns a queryset into an iterable that yields dictionaries, and model_to_dict turns a model instance into a single dictionary.  As long as you know about it this is pretty trivial to overcome.  Second, .values() converts foreign keys to {&#39;<field_name>_id&#39;: #} and model_to_dict converts them to {&#39;<field_name>&#39;: #}.  Since my purpose in using this was to populate a form I had to convert the id&#39;s into model instances and update the dictionary.  Not a big problem, but a bigger annoyance to solve than the first difference.</p>

<h2 id="toc_0">Comments</h2>
<p><strong><a href="#30" title="2013-03-14 15:19:47">ray</a>:</strong> Thanks for this. Saved me a lot of work I was about to get into.</p>
<p><strong><a href="#31" title="2013-07-24 14:29:09">jorgwel</a>:</strong> Hi, thaks for this info. Another difference between the two ways you mention, is that &ldquo;model_to_dict&rdquo; do returns details about ManyToMany fields, and &ldquo;.values()&rdquo; doesn&#39;t.</p>
<p><strong><a href="#32" title="2015-01-27 07:32:57">Vinay Kotian</a>:</strong> Hello, Thank you for the solution which has indeed helped. But now I am in a situation where i need all the dictionary from the queryset to be converted to string form rather than in unicode format({u&#39;abc&#39;: #}). Please let me know a solution thank you.</p>
<p><strong><a href="#33" title="2015-03-01 11:07:30">tsaylor</a>:</strong> You should use the json library to convert your dictionary to a json string.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[IOError: request data read error]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2012/ioerror-request-data-read-error.html"/>
        <published>2012-02-27T12:34:19+08:00</published>
        <updated>2015-04-10T21:46:32+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2012/ioerror-request-data-read-error.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>I couldn&#39;t find a good simple explanation of what this error means on the web, so to future googlers, you&#39;re welcome.</p>
<p>This most likely means that the user made a web reqeuest, probably through ajax, on your site and then cut off the connection before the ajax request completed.  The connection can be cut off by clicking on another link, closing the browser, or things in the middle like firewalls and whatnot.</p>
<p>There isn&#39;t a good solution to this issue that I could find, the error is just something that happens from time to time.  If it happens regularly and you don&#39;t think it&#39;s an accidental connection cut off, do some more exploring (particularly with firewalls and other potential connection problems), otherwise it can be ignored.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Commerce Update]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2011/commerce-update.html"/>
        <published>2011-12-16T14:00:20+08:00</published>
        <updated>2015-04-10T21:50:40+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2011/commerce-update.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>I&#39;ve done some exciting things in the world of commerce since my last post. After <a href="http://www.pumpingstationone.org/">Pumping Station: One</a> got a laser cutter I started cutting stuff from <a href="http://www.thingiverse.com/">Thingiverse</a> and thinking of products I could make with it.  I fixed the Thingiverse files for Tetris blocks and made some of those.  Then I thought of making glasses out of the <a href="http://knowyourmeme.com/memes/%E0%B2%A0%E0%B2%A0-look-of-disapproval">Look of Disapproval</a> from reddit.  Then Gretchen wanted me to make her something on the laser, so I made her a pendant with the kiss emoticon.  After a while I put all these things on my etsy store, <a href="http://www.etsy.com/shop/opticalawesome">Optical Awesome</a>.  The <a href="http://www.etsy.com/listing/79821028/look-of-disapproval-glasses">Look of Disapproval Glasses</a> started really taking off, and I&#39;ve now sold over 150 of them!  Exciting stuff.  I&#39;ve decided to move all my e-commerce to etsy since they make it so easy and deliver me traffic through their search.</p>
<p>I also sold things at Maker Faire NY, which was great.  My necklaces and t-shirts were big hits and I just about made enough money to cover the expenses of the trip. (Lesson #1, don&#39;t dig so big a hole that you have to have a ton of success to get back out of it.)  I kept track of a few things I started out doing wrong and did my best to fix on the spot, so hopefully those mistakes won&#39;t happen again: </p>

<ol>
<li>Post a price or people don&#39;t know it&#39;s for sale.  With all the makers just exhibiting things, it&#39;s easy to get confused.</li>
<li>If you put t-shirts out on a table people will look through them for their size.  Either have sizes out there or hang them up behind you.</li>
<li>Don&#39;t underestimate the number of girls there.  I didn&#39;t think necklaces would sell well, but a ton of girls came by and loved them.</li>
<li>People loved trying on the look of disapproval glasses and sending pics to their friends.  If I had a kiosk to do that it would be nice for collecting emails.</li>
</ol>
<p>Also I got a bunch of new product ideas from people coming up to my table.  I haven&#39;t acted on them yet, soon though!</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[BARcamp Chicago is July 9th &amp; 10th!]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2011/barcamp-chicago-is-july-9th-10th.html"/>
        <published>2011-06-22T13:38:12+08:00</published>
        <updated>2015-04-10T22:19:50+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2011/barcamp-chicago-is-july-9th-10th.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>I&#39;ve been hard at work for the last couple months helping to get <a href="http://www.barcampchicago.org/">BARcamp Chicago</a> put together this year.  We&#39;re hosting it at Pumping Station: One on the weekend of July 9th and 10th, and as always the event is free and there will be food and drinks provided (and not just pizza, we&#39;ll be grilling hamburgers and hot dogs on site). If you&#39;ve never been to BARcamp or to any unconference before, you should definitely come check it out.  The weekend will be filled with a wide variety of technology and entrepreneurship talks given by attendees.  If you have some knowledge you&#39;d like to share, you can give a talk too! We&#39;re also repeating the BARcompany contest.  Last year we had three companies present business plans and prototypes, and the winner, Sacha DeAngeli of <a href="http://www.ruggedscents.com/">RuggedScents</a>, has now launched his third manly scented cologne and has revenue coming in.  This year we have three experienced judges and a cash prize for the winner, so start thinking about something you&#39;d like to make. I know I&#39;m excited for BARcamp this year, and I hope you are too!  For more info, check out our website at <a href="http://www.barcampchicago.org/">http://www.barcampchicago.org/</a> or follow us on <a href="http://www.twitter.com/barcampchi">twitter</a>.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Focusing and Doing What I Love]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2011/focusing-and-doing-what-i-love.html"/>
        <published>2011-06-12T14:22:49+08:00</published>
        <updated>2015-04-10T22:18:50+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2011/focusing-and-doing-what-i-love.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>For years my efforts have been scattered between various projects. I have too many things going on at once and it&#39;s hard to keep it all straight and get anything meaningful done. When I stop to think about it, I <em>want</em> to focus on one thing at a time and make bigger, more awesome things happen, but I have a few major areas of interest with little overlap and I tend to go around in circles. Until now I&#39;ve just dealt with it and forced my way through bouts of disinterest, but after watching <a href="http://fora.tv/2011/05/22/Get_Inspired_with_MythBuster_Adam_Savage_at_Maker_Faire">Adam Savage&#39;s speech</a> at Maker Faire San Mateo 2011 along with a few other coinciding events I&#39;ve been driven to re-evaluate the things I&#39;m doing and why I&#39;m doing them. I think the fundamental problem is that I&#39;m doing too many things that I&#39;d be good at or that would be beneficial and not enough of things that I love. I&#39;ve frequently heard the axiom that to be happy and effective at work you have to be doing what you love. I never really considered that very deeply. Ever since high school I&#39;ve known I wanted to write software for a living because I thoroughly enjoyed computers. As I grew in that through college I began to love writing web applications. Incidentally, I also really appreciated data mining and I&#39;ve kept that interest alive on occasion, but I largely abandoned that. I knew I needed to specialize and while the web and data mining often complement each other they are very different disciplines. That&#39;s probably the healthiest approach to this problem that I&#39;ve ever taken. As I got my degree in computer science and continued marching toward becoming a software engineer another passion started growing: woodworking. I had liked building things like simple desks and furniture out of wood in the past but I never took it seriously. As I worked harder at software, I was becoming more interested in making more complicated things from wood and making them higher quality. I didn&#39;t have much guidance in that discipline so I ended up like any typical modern suburban man might; I bought a gaggle of tools that I didn&#39;t know how to use in an attempt to compensate for a lack of knowledge. Ultimately I gave up without making anything noteworthy, but my passion for making things never went away. It was a different facet of the same passion that brought me to programming in the first place. While I was stuck unable to make things as well as I wanted with wood, computers enabled me to make things without needing any particular talent beyond an analytical mind and there were teachers at my schools who could help me along in my development. After graduating college I continued improving as a software engineer. I met with local user groups about Linux and Python, I designed and wrote applications in my spare time for the joy of solving interesting problems and for the sake of improving my skills as a developer. I progressed professionally and was pleased with the success I had. I continued carrying a torch for making things - keeping some of my tools in my apartment even though using them there would be extremely impractical. (Not that that always stopped me!) I even rented a garage at one point and kept my tools there so I could build more things. I made a collapsable hammock frame that failed dismally but had some design features I&#39;m still proud of. I made a computer chair that struck a balance between reclining for comfort and sitting up for serious work. I made a small shelf for my then girlfriend&#39;s bathroom and an &ldquo;emergency&rdquo; Guy Fawkes mask box. These things were all very simple due to my limited woodworking skill, but they were very rewarding to make. They also weren&#39;t too distracting from my course as a software engineer. There were more things I wanted to make that were too impractical for me to do, like make an aluminum foundry or a steam engine, but I knew these were well beyond my reach not for a lack of skill but that I believed they couldn&#39;t be done in a city like Chicago. Then I was introduced to the concept of a hackerspace. Specifically, to Pumping Station: One, a hackerspace that was just beginning. It was essentially a group of dozens of people very similar to me. People who had modern jobs related to making things but were dissatisfied with the limitations they&#39;d experienced on their ability to produce their ideas. Many were even programmers who wanted to explore more tangible mediums for making. I knew this was a community that I needed to be a part of, and joining the hackerspace did turn out to be a great decision, but it also became a huge challenge. The hackerspace movement was rising around the country but it didn&#39;t come from nothing; the DIY mindset was increasingly popular in general and more things that appealed to a maker mindset were springing up. These things provided lots of inspiration to a group like our hackerspace. Too much inspiration in fact, at least for me. Initially I did end up building my aluminum foundry, but all the while countless these inspirational projects would cross our mailing list and would get added to my to do list, and I got overloaded. There were things from a wide range of disciplines that I wanted to sample to see if I could do them. I eventually had to prioritize, but the new ideas always seem like the greatest and most important ones so prioritization too often devolved into jumping into the new thing with the last one half finished. I&#39;ve been proceeding like that for a year or two, and I don&#39;t think I&#39;ve really made much that I&#39;m truly proud of since the aluminum foundry. At the same time, programming became more of a job than a passion. With so many tangible things that satisfied my passion for making I became less interested in software. I stopped going to user group meetings. I occasionally wrote software to scratch my own itch but most of it wasn&#39;t very interesting. My skills continued developing, but only where my job took them. I wasn&#39;t working with new exciting tools because the time I would have spent on those was now being spent with wood and metal at the hackerspace. This state of endless things to do is very demoralizing. I always had five or six projects on my mind and not enough time to complete them. That lead to having to force myself to work on things that I feel like I should be happy to be able to do. I&#39;d lost my motivation to do things that I used to love doing. I even lost the motivation to do some of the basic necessities. And it was hard to recognize what&#39;s going on because on the face of it I was doing exactly what I want to be doing, but it wasn&#39;t fulfilling. I should have been happy, but I wasn&#39;t.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[An experiment in statistical decryption of simple substitution ciphers]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2011/an-experiment-in-statistical-decryption-of-simple-substitution-ciphers.html"/>
        <published>2011-05-02T10:27:39+08:00</published>
        <updated>2015-04-10T22:25:24+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2011/an-experiment-in-statistical-decryption-of-simple-substitution-ciphers.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>When people put up an encrypted text puzzle online it is frequently a simple substitution cipher whereby each letter stands for a different letter and the plaintext is revealed by discovering the correct replacements for each letter. I always wondered if it was possible to automatically decrypt these puzzles by analyzing the frequency with which each character appears and compare that to the frequency of each character in the english language. (Obviously I&#39;m only decrypting english text, otherwise how would I know when it&#39;s right? Regardless, this code will work equally well for any language.) Recently I decided to test the theory. The code is below.  </p>

<pre><code>import string

cipher = '''
Vs lbh'er yvxr zr, lbh znl erpnyy Gehzcrg Jvafbpx, gung avsgl yvggyr ovg bs fbsgjner gung cebivqrq na vagresnpr sebz jvaqbjf gb gur GPC/VC cebgbpby fgnpx gung crbcyr nyy bire gur jbeyq hfrq gb pbaarpg gb gur vagrearg sbe gur svefg gvzr. 

Fb, vg gheaf bhg, gur thl jub znqr guvf qvqa'g znxr penc bss uvf jbex. Gehzcrg Jvafbpx jnf fgbyra naq npgviryl tvira njnl ba vafgnyy qvfxf sebz nyy gur znwbe grpu zntnmvarf naq va pbecbengr vafgnyyf. Ur jnf whfg n fznyy gvzr thl naq uvf pbzcnal unq ab jnl gb svtug gur enzcnag gursg. 

Uvf anzr jnf Crgre Gnggnz. Fbzrbar ba erqqvg gubhtug vg'q or n tbbq vqrn gb fgneg n qbangvba cbg gb frr vs sbyxf jbhyq cbal hc sbe gur fbsgjner gung znqr vg cbffvoyr sbe gurz gb trg gb gur ovt jvqr jro. V qvq. :) 

Fb, tb ba ol vs lbh hfrq vg, gbff n puvc be gjb va. Vg'f n avpr guvat gb qb.'''

real_plaintext = '''
If you're like me, you may recall Trumpet Winsock, that nifty little bit of software that provided an interface from windows to the TCP/IP protocol stack that people all over the world used to connect to the internet for the first time. 

So, it turns out, the guy who made this didn't make crap off his work. Trumpet Winsock was stolen and actively given away on install disks from all the major tech magazines and in corporate installs. He was just a small time guy and his company had no way to fight the rampant theft. 

His name was Peter Tattam. Someone on reddit thought it'd be a good idea to start a donation pot to see if folks would pony up for the software that made it possible for them to get to the big wide web. I did. :) 

So, go on by if you used it, toss a chip or two in. It's a nice thing to do.
'''

print &quot;Contractions&quot;
contractions = set()
for word in cipher.split(' '):
    if &quot;'&quot; in word:
        contractions.add(word)
print contractions

print &quot;\nSingle Letters&quot;
singles = set()
for word in cipher.split(' '):
    if len(word) == 1:
        singles.add(word)
print singles

print &quot;\nLetter Frequency&quot;
cipher = cipher.lower()
charlist = list(cipher)
chardict = {}
for i in charlist:
    if i in list('abcdefghijklmnopqrstuvwxyz'):
        chardict[i] = chardict.get(i, 0) + 1
charlist = zip(chardict.values(), chardict.keys())
charlist = sorted(charlist, key=lambda x: x[0])
charlist.reverse()
for j,k in charlist:
    print j, k


print &quot;\nStatistical Frequency Plaintext&quot;
intab = ''.join([x[1] for x in charlist])
outtab = 'etaoinshrdlcumwfgypbvkjxqz'[:len(intab)]
plain = string.translate(cipher, string.maketrans(intab, outtab))
print plain</code></pre>
<p>I immediately encountered a major problem with one of my assumptions: various sources disagreed on the frequency of letter occurrence in the english language. I always thought those numbers were well established since people widely regard &ldquo;E&rdquo; as the most common letter, and Pat Sajak has sworn by &ldquo;RSTLN&rdquo; for decades. Also, most ciphertexts are far too small to make frequencies very relevant. In fact, the example I originally started with didn&#39;t even include all 26 letters.</p>
<p>After a few tries, this approach didn&#39;t work. It may be a useless approach because any text large enough for statistics to matter would probably not use a simple substitution cipher. However it was a fun experiment and a negative result is still a result worth sharing.</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Thing-A-Day Wrap Up &amp; The Secret Cabinet Revealed]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2011/thing-a-day-wrap-up-the-secret-cabinet-revealed.html"/>
        <published>2011-02-28T10:15:57+08:00</published>
        <updated>2015-04-10T22:14:36+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2011/thing-a-day-wrap-up-the-secret-cabinet-revealed.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>So obviously I haven&#39;t kept up with my thing-a-day blog posts. I&#39;ve still been doing some things but not every day, and all those knitting days during the weeks were disenchanting. I&#39;ve decided to cover everything in one big wrap up post for the month. I &ldquo;finished&rdquo; the secret cabinet project. The cabinet is an &ldquo;emergency documentation box&rdquo; for Pumping Station: One. It&#39;s mounted near the soon to be new home for Electric Avenue in a fairly prominent place and contains a flip video camera graciously donated by Anne Petersen. Now there&#39;s no excuse to not have video of the culmination of your awesome project. This camera really couldn&#39;t be any easier to use, so I hope this box helps out the space. I said it&#39;s &ldquo;finished&rdquo; because I really just got tired of working on it and moved on. There should be some lettering on the window but I&#39;ll add it later. </p>
<p><a href="http://www.flickr.com/photos/tsaylor/5482370452/"><img src="http://farm6.static.flickr.com/5257/5482370452_cd404915f9_m.jpg" alt="Mounted and filled"/></a></p>
<p>I implemented the <a href="http://www.woodbutcher.net/scary.shtml">scary sharp</a> tool sharpening system and sharpened a chisel and a hand plane. I sharpened them down to 1000 grit sandpaper and I intended to go down to 2000 but after seeing how amazing the results are with 1000 I don&#39;t think it&#39;s necessary. </p>
<p><a href="http://www.flickr.com/photos/tsaylor/5482371348/"><img src="http://farm6.static.flickr.com/5217/5482371348_da901eef81_m.jpg" alt=".0035 inch thick wood shaving"/></a><a href="http://www.flickr.com/photos/tsaylor/5482372102/"><img src="http://farm6.static.flickr.com/5254/5482372102_184a6da8f3_m.jpg" alt="Hand Plane"/></a></p>
<p>I produced a video of a Sun Jar for Element14. They approached PS:One a while back to send someone and record some of our projects and they got a good response from the video, so they asked for more. I hope it&#39;s the first of a long series. </p>
<p><a href="http://vimeo.com/20758441">How to make a Sun Jar</a> from <a href="http://vimeo.com/psone">Pumping Station: One</a> on <a href="http://vimeo.com">Vimeo</a>.</p>
<p>I and several other members <a href="http://pumpingstationone.org/2011/02/workshop-build-out-take-one/">built three workbenches</a> for the new shop in Pumping Station: One. It&#39;s always fun to do those kind of large scale builds, but we could certainly use more tools so more people can work at once. </p>
<p><a href="http://www.flickr.com/photos/tsaylor/5481775321/"><img src="http://farm6.static.flickr.com/5215/5481775321_3f9bd28d0a_m.jpg" alt="New workbenches"/></a></p>
<p>I still have plenty more projects on my list of stuff I could do this month and a few more cool things have popped up, so keep an eye out for weekend projects in March!</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Thing-A-Day #14: Knitting group and final coat of paint]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2011/thing-a-day-14-knitting-group-and-final-coat-of-paint.html"/>
        <published>2011-02-14T22:43:02+08:00</published>
        <updated>2015-04-10T22:17:31+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2011/thing-a-day-14-knitting-group-and-final-coat-of-paint.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>Mondays are when the PSOne knitting group meets, so I went and put some rows on my scarf. I also put the last bits of paint on my cabinet. One more day left on that project until I reveal what it&#39;s for! After examining the dry paint from yesterday I firmly believe the foam roller is the way to go. I think I could sand that out in no time and get a nice finish. However, I think I would need to prep the wood better than I did to make this particular piece look as nice as I want, so it&#39;s just not going to happen this time. Oh well, another project!</p>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Thing-A-Day #13: Lathe Stuff &amp; Painting]]></title>
        <author><name>Tim</name></author>
        <link href="http://lab.lepture.com/liquidluck/2011/thing-a-day-13-lathe-stuff-painting.html"/>
        <published>2011-02-13T23:03:31+08:00</published>
        <updated>2015-04-10T22:18:15+08:00</updated>
        <id>http://lab.lepture.com/liquidluck/2011/thing-a-day-13-lathe-stuff-painting.html</id>
        <content type="html" xml:base="http://lab.lepture.com/liquidluck/" xml:lang="en">
            <![CDATA[ <p>I had a very productive maker day today to make up for all the knitting throughout the week. First, I installed the new bearing on the metal lathe&#39;s lead screw. It seems to be working much better now, but the change gears have been modified since I tested it before. I&#39;ll have to change it back to absolutely confirm that it was an issue with that bearing, but for now it&#39;s working well. <a href="http://www.flickr.com/photos/tsaylor/5443650821/"><img src="http://farm6.static.flickr.com/5097/5443650821_977083a379.jpg" alt="Metal Lathe"/></a> On the left of the lathe you can see my second project of the day. We have several brushes and tools that go with the lathe and they usually just lay in the chip tray or on the workbench. I made this rack for some of the tools and brushes to get the area more organized. It&#39;s just some 1 inch holes in a scrap of 2x4, but it does the job well enough. <a href="http://www.flickr.com/photos/tsaylor/5443650963/"><img src="http://farm6.static.flickr.com/5212/5443650963_9f4e3b2952.jpg" alt="Tool Rack"/></a> Finally, I put what is hopefully the last coat of paint on the secret cabinet. Like I said in the last post, I think my sanding and use of a brush was a problem. I got a sander that could take my higher grit sandpaper and used some 400 on it to smooth out the painted faces. It worked very well, some other people commented that it feels like plastic rather than wood. I think I probably should have started even lower than 400, but 400 did the job. I also got a foam roller and did most of the painting with that. It left a nice finish and any bubbling that occurred during application had dissipated by the time I got back around to that side to examine it. I still had to use the brush on the inner corners, but it&#39;s greatly reduced. Maybe that&#39;s what those foam brushes are for. Anyway, this isn&#39;t actually the last application of paint because the frame for the door is painted on both sides. I&#39;ll have to get the other side painted tomorrow. However, this is hopefully the last time I paint over existing paint. <a href="http://www.flickr.com/photos/tsaylor/5443651083/"><img src="http://farm6.static.flickr.com/5016/5443651083_97de47e005.jpg" alt="Secret Cabinet paint job"/></a></p>
]]>
        </content>
    </entry>
</feed>